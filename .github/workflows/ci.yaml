name: CI

on:
  push:

env:
  GRM_PATH: '/tmp/git-restore-mtime.py'
  CARGO_INCREMENTAL: 1

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: format
        run: cargo fmt
      - name: push
        if: github.event_name == 'push'
        run: |
          if [ -n "$(git diff)" ]; then
            git config --local user.name "${GITHUB_ACTOR}"
            git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git remote set-url origin "https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
            git add .
            git commit -m "format: ${GITHUB_SHA::7}"
            git push origin ${GITHUB_REF#refs/heads/}
          fi

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [beta, stable]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all commit history for mtime
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      # Cache
      - name: Cache git-restore-mtime script
        id: cache-grm
        uses: actions/cache@v2
        with:
          path: ${{ env.GRM_PATH }}
          key: ${{ runner.os }}-git-restore-mtime
      - name: DL if no cache hit
        if: steps.cache-grm.outputs.cache-hit != 'true'
        run: curl -Lo ${{ env.GRM_PATH }} "https://github.com/MestreLion/git-tools/raw/main/git-restore-mtime"
      - name: Restore mtime
        run: python ${{ env.GRM_PATH }}

      - name: Cache rust libs
        id: cache-rustlibs
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cache-rustlibs-${{ hashFiles( format('{0}{1}', github.workspace, '/Cargo.lock') ) }}
          restore-keys:
            ${{ runner.os }}-cache-rustlibs-

      - run: cargo check

  clippy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@clippy
      - run: cargo clippy -- -Wclippy::all -Wclippy::pedantic

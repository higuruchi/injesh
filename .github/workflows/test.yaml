name: test

on:
  push:

env:
  CACHE_PATH_NGINX: '/tmp/nginx-image-save.tar'
  NGINX_IMAGE_VERSION: '1.21.6'
  CACHE_PATH_SCRATCH_WEB: '/tmp/scratch_web-image-save.tar'
  SCRATCH_WEB_IMAGE_VERSION: 'latest'
  GRM_PATH: '/tmp/git-restore-mtime.py'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            # Fetch all commit history for mtime
            fetch-depth: 0

      # Cache rust crates
      # ------------------------------------------------

      # Cache
      - name: Cache git-restore-mtime script
        id: cache-grm
        uses: actions/cache@v2
        with:
          path: ${{ env.GRM_PATH }}
          key: ${{ runner.os }}-git-restore-mtime
      - name: DL if no cache hit
        if: steps.cache-grm.outputs.cache-hit != 'true'
        run: curl -Lo ${{ env.GRM_PATH }} "https://github.com/MestreLion/git-tools/raw/main/git-restore-mtime"
      - name: Restore mtime
        run: python ${{ env.GRM_PATH }}

      - name: Cache rust libs
        id: cache-rustlibs
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles( format('{0}{1}', github.workspace, '/Cargo.lock') ) }}
          restore-keys:
            ${{ runner.os }}-cargo-

      # cache scratch_web docker image test
      # ------------------------------------------------

      - name: Cache nginx docker image
        id: cache-scratchweb-test2
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATH_SCRATCH_WEB }}
          key: ${{ runner.os }}-cache-scratchweb-test2-${{ env.SCRATCH_WEB_IMAGE_VERSION }}
          restore-keys:
            ${{ runner.os }}-cache-scratchweb-test2-

      - name: Load docker image from cache
        if: steps.cache-scratchweb-test2.outputs.cache-hit == 'true'
        run: docker load --input ${{ env.CACHE_PATH_SCRATCH_WEB }}

      - name: Build scratch web server docker image
        if: steps.cache-scratchweb-test2.outputs.cache-hit != 'true'
        run: |
          docker image build -f ci-docker/scratch_web/Dockerfile -t scratch_web ci-docker/scratch_web/
          docker save --output ${{ env.CACHE_PATH_SCRATCH_WEB }} scratch_web:${{ env.SCRATCH_WEB_IMAGE_VERSION }}

      # cache nginx docker image test
      # ------------------------------------------------

      - name: Cache nginx docker image
        id: cache-nginx-test2
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATH_NGINX }}
          key: ${{ runner.os }}-cache-nginx-test2-${{ env.NGINX_IMAGE_VERSION }}
          restore-keys:
            ${{ runner.os }}-cache-nginx-test2-

      - name: Load docker image from cache
        if: steps.cache-nginx-test2.outputs.cache-hit == 'true'
        run: docker load --input ${{ env.CACHE_PATH_NGINX }}

      - name: Pull docker image and save cache
        if: steps.cache-nginx-test2.outputs.cache-hit != 'true'
        run: |
          docker pull nginx:${{ env.NGINX_IMAGE_VERSION }}
          docker save --output ${{ env.CACHE_PATH_NGINX }} nginx:${{ env.NGINX_IMAGE_VERSION }}

      # start docker container
      # ------------------------------------------------

      - name: run scratch_web
        run: docker run -d --name test_scratch_web scratch_web:${{ env.SCRATCH_WEB_IMAGE_VERSION }}

      - name: run nginx
        run: docker run -d --name test_nginx nginx:${{ env.NGINX_IMAGE_VERSION }}

      # run test
      # ------------------------------------------------

      - run: cargo test
